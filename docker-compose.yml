version: "3.9"
services:
  llm-server:
    restart: unless-stopped
    build:
      context: ./llm-server
      dockerfile: Dockerfile
      target: ${TARGET}
    image: codebanesr/llm-server:latest
    volumes:
      - ./llm-server:/app  # Mount the host llm-server directory to /app in the container
      - shared_data:/app/shared_data
    networks:
      - opencopilot_network
    env_file:
      - llm-server/.env.docker
    ports:
      - 8002:8002
      - 5678:5678
    depends_on:
      - mongodb
      - qdrant
  
  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - opencopilot_network

  workers:
    restart: unless-stopped
    build:
      context: ./workers
      dockerfile: Dockerfile
    image: codebanesr/workers:latest  # Add this line
    networks:
      - opencopilot_network
    volumes:
      - shared_data:/app/shared_data
    env_file:
      - llm-server/.env.docker
    # worker will also check for some database tables, this is a hacky solution
    command: sh -c "celery -A celery_app worker --loglevel=info"
    depends_on:
      - mysql
      - qdrant

  dashboard:
    restart: unless-stopped
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    image: codebanesr/dashboard:latest  # Add this line
    ports:
      - 8000:8000
    volumes:
      - shared_data:/app/shared_data
    networks:
      - opencopilot_network
    depends_on:
      - mysql

  mysql:
    restart: unless-stopped
    platform: linux/x86_64
    image: "mysql:8"
    ports:
      - "3307:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: opencopilot
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpass
    volumes:
      - database:/var/lib/mysql
    networks:
      - opencopilot_network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: dbuser
      MONGO_INITDB_ROOT_PASSWORD: dbpass
    networks:
      - opencopilot_network

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - opencopilot_network

  qdrant:
    image: qdrant/qdrant
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - opencopilot_network

  selenium:
    # image: selenium/standalone-firefox:4.14.1-20231025
    image: seleniarm/standalone-firefox:4.1.2-20220222
    ports:
      - "4444:4444"
      - "7900:7900"
    shm_size: 2g
    networks:
      - opencopilot_network

  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - "8888:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - opencopilot_network
    depends_on:
      - dashboard
      - llm-server
      - mysql

networks:
  opencopilot_network:

volumes:
  shared_data:
  database:
  mongodb_data:
  qdrant_storage:
  redis_data:
  minio_data:
    driver: local
