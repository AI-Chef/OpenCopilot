apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert --out=k8s
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: llm-server
  name: llm-server
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: llm-server
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert --out=k8s
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/opencopilot-opencopilot-network: "true"
        io.kompose.service: llm-server
    spec:
      containers:
        - env:
            - name: CELERY_BACKEND
              valueFrom:
                configMapKeyRef:
                  key: CELERY_BACKEND
                  name: envsconfig
            - name: CELERY_BROKER
              valueFrom:
                configMapKeyRef:
                  key: CELERY_BROKER
                  name: envsconfig
            - name: COPILOT_MODE
              valueFrom:
                configMapKeyRef:
                  key: COPILOT_MODE
                  name: envsconfig
            - name: LANGCHAIN_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: LANGCHAIN_API_KEY
                  name: envsconfig
            - name: LANGCHAIN_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  key: LANGCHAIN_ENDPOINT
                  name: envsconfig
            - name: LANGCHAIN_PROJECT
              valueFrom:
                configMapKeyRef:
                  key: LANGCHAIN_PROJECT
                  name: envsconfig
            - name: LANGCHAIN_TRACING_V2
              valueFrom:
                configMapKeyRef:
                  key: LANGCHAIN_TRACING_V2
                  name: envsconfig
            - name: LOCAL_IP
              valueFrom:
                configMapKeyRef:
                  key: LOCAL_IP
                  name: envsconfig
            - name: MONGODB_URL
              valueFrom:
                configMapKeyRef:
                  key: MONGODB_URL
                  name: envsconfig
            - name: MYSQL_URI
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_URI
                  name: envsconfig
            - name: OPENAI_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_KEY
                  name: envsconfig
            - name: OPENAI_API_TYPE
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_TYPE
                  name: envsconfig
            - name: PINECONE_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: PINECONE_API_KEY
                  name: envsconfig
            - name: PINECONE_ENV
              valueFrom:
                configMapKeyRef:
                  key: PINECONE_ENV
                  name: envsconfig
            - name: QDRANT_URL
              valueFrom:
                configMapKeyRef:
                  key: QDRANT_URL
                  name: envsconfig
            - name: SCORE_THRESHOLD
              valueFrom:
                configMapKeyRef:
                  key: SCORE_THRESHOLD
                  name: envsconfig
            - name: SELENIUM_GRID_URL
              valueFrom:
                configMapKeyRef:
                  key: SELENIUM_GRID_URL
                  name: envsconfig
            - name: SHARED_FOLDER
              valueFrom:
                configMapKeyRef:
                  key: SHARED_FOLDER
                  name: envsconfig
            - name: STORE
              valueFrom:
                configMapKeyRef:
                  key: STORE
                  name: envsconfig
          image: codebanesr/llm-server:arm_edge
          name: llm-server
          ports:
            - containerPort: 8002
              hostPort: 8002
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /app/shared_data
              name: shared-data
      restartPolicy: Always
      volumes:
        - name: shared-data
          persistentVolumeClaim:
            claimName: shared-data
status: {}
